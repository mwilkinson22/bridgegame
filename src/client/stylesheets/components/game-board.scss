@use "../variables/layout";

$right-answer-colour: #157d42;
$wrong-answer-colour: #841212;

@mixin SetCellColours($fill, $text) {
	path {
		fill: $fill;
	}
	&.clickable {
		path:hover {
			fill: lighten($fill, 3%);
		}
	}
	color: $text;
}

.game-board {
	overflow: auto;
	padding: 10px;
	@include layout.HexagonalGrid(90px);
	.hexagon {
		&.clickable {
			cursor: pointer;
		}

		&.hidden {
			@include SetCellColours(#555, white);
			.hexagon-content {
				opacity: 0;
			}
		}

		&.startend {
			@include SetCellColours(#1a3860, white);
		}

		&.eliminator {
			@include SetCellColours(#333, #bbb);
			.hexagon-content {
				font-size: 2em;
				rotate: 60deg;
				transform: scaleX(-100%);
			}
		}
		&.eliminator.clickable,
		&.eliminated-lie {
			@include SetCellColours(#6f144c, #fc0);
		}

		&.clicked-truth,
		&.revealed-truth {
			@include SetCellColours($right-answer-colour, white);
		}
		&.clicked-lie,
		&.revealed-lie {
			@include SetCellColours($wrong-answer-colour, white);
		}

		&.revealed-truth,
		&.revealed-lie {
			opacity: 0.4;
		}

		&.unknown-answer {
			@include SetCellColours(#c8e3f1, black);
		}

		&:not(.hidden):not(.eliminator) {
			.hexagon-content {
				opacity: 0;
				animation: fade-in 200ms forwards;
				animation-delay: 300ms;
			}
		}
	}

	path {
		transition: fill 400ms;
		rotate: 0deg;
	}
}

@keyframes reveal-cell {
	from {
		opacity: 0;
	}
	to {
		opacity: 1;
	}
}

@keyframes points-change {
	from {
		transform: scale(1.5);
	}
	to {
		transform: scale(1);
	}
}
