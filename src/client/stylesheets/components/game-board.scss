@use "../variables/layout";

@mixin SetCellColours($fill, $text) {
	path {
		fill: $fill;
	}
	&.clickable {
		path:hover {
			fill: lighten($fill, 3%);
		}
	}
	color: $text;
}
.game-info {
	display: grid;
	grid-template-columns: 100px auto 100px;
	align-items: center;
	justify-content: space-between;
	padding: 10px 0;

	.lives-counter {
		display: flex;
		flex-direction: row;
		gap: 6px;
		justify-content: flex-start;

		.life {
			width: 25px;
			height: 25px;
			border-radius: 100%;
			color: #800;
			border: 3px solid currentColor;
			background-color: #200;
			transition: background-color 200ms;

			&.not {
				background: currentColor;
			}
		}
	}

	.game-category {
		text-align: center;
	}

	.points-counter {
		color: #ccc;
		text-align: right;
		white-space: nowrap;
		.points-ticker {
			color: white;
			font-weight: 600;
			display: inline-block;
			&.incrementing,
			&.decrementing {
				animation: points-change 400ms;
			}
			&.incrementing {
				color: #5fcc8e;
			}
			&.decrementing {
				color: #f94848;
			}
		}
	}
}

.game-board {
	overflow: auto;
	@include layout.HexagonalGrid(90px);
	.hexagon {
		&.clickable {
			cursor: pointer;
		}

		&.hidden {
			@include SetCellColours(#555, white);
			.hexagon-content {
				opacity: 0;
			}
		}

		&.startend {
			@include SetCellColours(#1a3860, white);
		}

		&.eliminator {
			@include SetCellColours(#333, #bbb);
			.hexagon-content {
				font-size: 2em;
				rotate: 60deg;
				transform: scaleX(-100%);
			}
		}
		&.eliminator.clickable,
		&.eliminated-lie {
			@include SetCellColours(#6f144c, #fc0);
		}

		&.clicked-truth,
		&.revealed-truth {
			@include SetCellColours(#157d42, white);
		}
		&.clicked-lie,
		&.revealed-lie {
			@include SetCellColours(#841212, white);
		}

		&.revealed-truth,
		&.revealed-lie {
			opacity: 0.4;
		}

		&.unknown-answer {
			@include SetCellColours(#c8e3f1, black);
		}

		&:not(.hidden) {
			.hexagon-content {
				opacity: 0;
				animation: reveal-cell 200ms forwards;
				animation-delay: 300ms;
			}
		}
	}

	path {
		transition: fill 400ms;
	}
}

@keyframes reveal-cell {
	from {
		opacity: 0;
	}
	to {
		opacity: 1;
	}
}

@keyframes points-change {
	from {
		transform: scale(1.5);
	}
	to {
		transform: scale(1);
	}
}
